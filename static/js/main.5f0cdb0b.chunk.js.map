{"version":3,"sources":["components/CalcButton.js","components/ButtonList.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","props","big","css","CalcButton","id","value","ButtonList","clickableElem","map","elem","i","ButtonContainer","div","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2qBAEA,IAAMA,EAASC,IAAOC,OAAV,KASN,SAAAC,GAAK,OAAIA,EAAMC,KACjBC,YADW,QAcAC,EAPI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAEtB,OACI,cAACR,EAAD,CAAQO,GAAIA,EAAZ,SAAiBC,KCHVC,EAhBI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAIlB,OACIA,EAAcC,KAAI,SAACC,EAAMC,GACrB,OACI,cAAC,EAAD,CACIN,GAAIG,EAAcG,GAAGN,GACrBC,MAAOE,EAAcG,GAAGL,Y,wHCL5C,IAAMM,EAAkBb,IAAOc,IAAV,KAOfL,EAAgB,CACpB,CAAEH,GAAI,QAASC,MAAO,MACtB,CAAED,GAAI,SAAUC,MAAO,KACvB,CAAED,GAAI,WAAYC,MAAO,KACzB,CAAED,GAAI,QAASC,MAAO,KACtB,CAAED,GAAI,QAASC,MAAO,KACtB,CAAED,GAAI,OAAQC,MAAO,KACrB,CAAED,GAAI,WAAYC,MAAO,KACzB,CAAED,GAAI,OAAQC,MAAO,KACrB,CAAED,GAAI,OAAQC,MAAO,KACrB,CAAED,GAAI,MAAOC,MAAO,KACpB,CAAED,GAAI,MAAOC,MAAO,KACpB,CAAED,GAAI,MAAOC,MAAO,KACpB,CAAED,GAAI,MAAOC,MAAO,KACpB,CAAED,GAAI,QAASC,MAAO,KACtB,CAAED,GAAI,OAAQC,MAAO,KACrB,CAAED,GAAI,UAAWC,MAAO,KACxB,CAAED,GAAI,SAAUC,MAAO,MAeVQ,EAZH,WAEV,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,IACA,cAACH,EAAD,UACE,cAAC,EAAD,CAAYJ,cAAeA,UC3BpBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f0cdb0b.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n    background-color: transparent;\n    border-radius: 0.25rem;\n    border: 1px solid palevioletred;\n    color: palevioletred;\n    margin: 0.2rem;\n    padding: 0.25rem 1rem;\n    font-weight: bold;\n\n    ${props => props.big &&\n    css`\n        background: palevioletred;\n        color: white;\n    `}\n`\n\nconst CalcButton = ({ id, value }) => {\n\n    return (\n        <Button id={id}>{value}</Button>\n    );\n}\n\nexport default CalcButton;","import CalcButton from './CalcButton';\n\nconst ButtonList = ({ clickableElem }) => {\n\n    // Create buttons by mapping through array and passing\n    // props to CalcButton component which returns a JSX element\n    return (\n        clickableElem.map((elem, i) => {\n            return (\n                <CalcButton \n                    id={clickableElem[i].id}\n                    value={clickableElem[i].value}\n                />\n            );\n        })\n    );\n}\n\nexport default ButtonList;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ReactFCCtest from 'react-fcctest';\nimport ButtonList from './components/ButtonList';\nimport styled, { css } from 'styled-components';\n\nconst ButtonContainer = styled.div`\n  border: solid 1px grey;\n  height: 10rem;\n  \n`\n\n// Table with clickable elements as objects\nconst clickableElem = [\n  { id: 'clear', value: 'AC' },\n  { id: 'divide', value: '/' },\n  { id: 'multiply', value: 'x' },\n  { id: 'seven', value: '7' },\n  { id: 'eight', value: '8' },\n  { id: 'nine', value: '9' },\n  { id: 'subtract', value: '-' },\n  { id: 'four', value: '4' },\n  { id: 'five', value: '5' },\n  { id: 'six', value: '6' },\n  { id: 'add', value: '+' },\n  { id: 'one', value: '1' },\n  { id: 'two', value: '2' },\n  { id: 'three', value: '3' },\n  { id: 'zero', value: '0' },\n  { id: 'decimal', value: '.' },\n  { id: 'equals', value: '=' }\n]\n\nconst App = () => {\n\n  return (\n    <div className='App'>\n      <ReactFCCtest />\n      <ButtonContainer>\n        <ButtonList clickableElem={clickableElem} />\n      </ButtonContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}